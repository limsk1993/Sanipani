<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="spAdmin">

	<select id="MemberInfo"
		 parameterClass="java.util.HashMap"
		 resultClass="java.util.HashMap">
	SELECT A.MEMBERNO,A.NAME,A.ID,A.NICK,A.PHONE,A.EMAIL1,A.GRADE_NO
	FROM (
	SELECT ROW_NUMBER() OVER(ORDER BY MEMBERNO ASC) AS RNUM, MEMBERNO, NAME,ID,NICK,PHONE,EMAIL1,GRADE_NO
	FROM MEMBERINFO
	WHERE 1=1
		<isNotEmpty property="SearchContent">
			<isEqual  property="search" compareValue="Id" >
				AND ID LIKE '%' || #SearchContent# || '%'
			</isEqual>
			<isEqual  property="search" compareValue="Nick">
				AND NICK LIKE '%' || #SearchContent# || '%'
			</isEqual>
		</isNotEmpty>
	)A
	WHERE A.RNUM BETWEEN #start# AND #end#
	</select>
	
	<select id="MemberInfoCount" parameterClass="java.util.HashMap" resultClass="Integer">
	SELECT COUNT(*) AS CNT
	FROM MEMBERINFO
	WHERE 1 = 1
		<isNotEmpty property="SearchContent">
			<isEqual  property="search" compareValue="Id" >
				AND ID LIKE '%' || #SearchContent# || '%'
			</isEqual>
			<isEqual  property="search" compareValue="Nick">
				AND NICK LIKE '%' || #SearchContent# || '%'
			</isEqual>
		</isNotEmpty>
	</select>
	
	<!-- 해당멤머 정보가져오기 쿼리문  -->
	<select id="MemberInfoLook" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT A.RNUM, A.MEMBERNO, A.NAME, A.ID, A.NICK, A.PHONE, A.EMAIL1, A.GRADE_NO
	FROM (
	SELECT ROW_NUMBER() OVER(ORDER BY MEMBERNO ASC) AS RNUM, MEMBERNO, NAME,ID,NICK,PHONE,EMAIL1,GRADE_NO
	FROM MEMBERINFO		
	)A
	WHERE A.MEMBERNO = #testNo#
	</select>
	
	<!-- 글수정쿼리문  -->		
	<update id="MemberInfoFix" parameterClass="java.util.HashMap">
	UPDATE MEMBERINFO SET GRADE_NO = #MemberGradeNum#
	WHERE MEMBERNO = #testNo#
	</update>
	
	
	<select id="getAdminMoney"
	 parameterClass="java.util.HashMap"
	 resultClass="java.util.HashMap"
	>
	
	SELECT NO,ID,SA_PA_MO_NO,MEMBERNO,CHARGE_PRICE,TO_CHAR(CHARGE_DATE,'YYYY-MM-DD'||' '||'HH:MI:SS') AS CHARGE_DATE,EXCHANGE_PRICE,
			TO_CHAR(EXCHANGE_DATE,'YYYY-MM-DD'||' '||'HH:MI:SS') AS EXCHANGE_DATE
	FROM (SELECT  ROW_NUMBER() OVER (ORDER BY SA_PA_MO_NO DESC) AS NO,I.ID,
        SA_PA_MO_NO,I.MEMBERNO,CHARGE_PRICE,CHARGE_DATE,EXCHANGE_PRICE,EXCHANGE_DATE
	FROM SANIPANIMONEY M INNER JOIN MEMBERINFO I ON M.MEMBERNO = I.MEMBERNO
	WHERE 1=1 
	<isNotEmpty property="searchText">
    	AND I.ID = #searchText# 
    </isNotEmpty>
    <isNotEmpty property="searchDate">
    	AND CHARGE_DATE LIKE TO_DATE(#searchDate#)
    </isNotEmpty>
    <isNotEmpty property="searchUseDate">
    	AND EXCHANGE_DATE LIKE TO_DATE(#searchUseDate#)
    </isNotEmpty>
	
	) A	
	
    WHERE A.NO BETWEEN #start# AND #end# 
	</select>
	
	<select id="getAdminMoneyPage" parameterClass="java.util.HashMap" resultClass="Integer">
	SELECT COUNT(SA_PA_MO_NO) AS CNT
	FROM SANIPANIMONEY M INNER JOIN MEMBERINFO I ON M.MEMBERNO = I.MEMBERNO
	WHERE 1 = 1
	<isNotEmpty property="searchText">
    	AND I.ID = #searchText# 
    </isNotEmpty>
	</select>
	
	<insert id="insertMoneyRefund"
	parameterClass="java.util.HashMap"
	>
	INSERT INTO SANIPANIMONEY(SA_PA_MO_NO,MEMBERNO,CHARGE_PRICE,CHARGE_DATE)
	VALUES(SA_PA_MONEY.NEXTVAL,#UserNo#,#moneyRefund#,SYSDATE)
	
	</insert>
</sqlMap>